name: Home Server CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: # Allows manual triggering

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t home-server-image .

      - name: Run Docker container in background
        run: |
          docker run -d --name home-server-ci \
            -p 3000:3000 \
            -p 3002:3002 \
            -e INITIAL_ADMIN_USER=testadmin \
            -e INITIAL_ADMIN_EMAIL=test@example.com \
            -e INITIAL_ADMIN_PASSWORD=password \
            home-server-image
          # Wait for services to start up
          echo "Waiting for services to start..."
          sleep 30 # Adjust as needed for your app's startup time

      - name: Check Frontend Homepage
        run: curl --fail --silent --show-error http://localhost:3000/ | cat

      - name: Check Frontend Login Page
        run: curl --fail --silent --show-error http://localhost:3000/login | cat

      - name: Check Backend Health and Authenticated Route
        run: |
          echo "Attempting login to backend..."
          LOGIN_RESPONSE=$(curl --silent --show-error -X POST -H "Content-Type: application/json" \
            -d '{"username":"testadmin","password":"password"}' \
            http://localhost:3002/api/auth/login)

          echo "Login response: $LOGIN_RESPONSE"

          TOKEN=$(echo "$LOGIN_RESPONSE" | grep -o '"token":"[^"]*' | grep -o '[^"]*$')

          if [ -z "$TOKEN" ]; then
            echo "Login failed or token not found in response."
            docker logs home-server-ci
            exit 1
          else
            echo "Token acquired: $TOKEN"
            echo "Checking /api/users (authenticated route)..."
            curl --fail --silent --show-error -H "Authorization: Bearer $TOKEN" http://localhost:3002/api/users | cat
            echo "Checking /api/logs (authenticated admin route)..."
            curl --fail --silent --show-error -H "Authorization: Bearer $TOKEN" http://localhost:3002/api/logs | cat
          fi

      - name: Check Ollama Chat Page
        run: curl --fail --silent --show-error http://localhost:3000/ollama-chat | cat

      - name: Display Docker logs on failure
        if: failure()
        run: docker logs home-server-ci

      - name: Stop and remove Docker container
        if: always() # Ensure cleanup even if steps fail
        run: docker rm -f home-server-ci || true
