name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Backend Tests
    runs-on: ubuntu-latest

    # Service containers to run with the job
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        ports:
          - 3306:3306
        # Set health checks to wait until mysql has started
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      # Application configuration for testing
      SPRING_PROFILES_ACTIVE: test
      SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/${{ secrets.MYSQL_DATABASE }}
      SPRING_DATASOURCE_USERNAME: ${{ secrets.MYSQL_USER }}
      SPRING_DATASOURCE_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.MySQL8Dialect
      SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
      SPRING_JPA_SHOW_SQL: true
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_EXPIRATION: ${{ secrets.JWT_EXPIRATION }}
      SERVER_PORT: 8080

      # Test configuration
      CI_ENVIRONMENT: "true"
      SERVER_URL: http://localhost:8080/actuator/health
      MAX_WAIT_SECONDS: 120

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Install MySQL Client
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y -qq mysql-client

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..30}; do
            if mysql -h 127.0.0.1 -u $SPRING_DATASOURCE_USERNAME -p$SPRING_DATASOURCE_PASSWORD -e "SELECT 1" >/dev/null 2>&1; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL... ($i/30)"
            sleep 2
          done

      - name: Initialize Database
        run: |
          mysql -h 127.0.0.1 -u root -p${{ secrets.MYSQL_ROOT_PASSWORD }} < db/init.sql

      - name: Make scripts executable
        run: |
          chmod +x run-test.sh tests/**/*.sh

      - name: Verify Environment Setup
        run: |
          echo "=== Environment ==="
          echo "Java version:"
          java -version
          echo "Maven version:"
          mvn --version
          echo "MySQL connection test:"
          mysql -h 127.0.0.1 -u $SPRING_DATASOURCE_USERNAME -p$SPRING_DATASOURCE_PASSWORD -e "SELECT 'Connection successful'" ${{ secrets.MYSQL_DATABASE }}

      - name: Run Tests
        run: ./run-test.sh

      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Maven Tests
          path: backend/target/surefire-reports/TEST-*.xml
          reporter: java-junit
          fail-on-error: true

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            backend/target/surefire-reports/
            backend/target/site/
          retention-days: 7
