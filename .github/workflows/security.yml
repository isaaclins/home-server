name: Security Scanning

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: "0 2 * * 0"

jobs:
  codeql:
    name: CodeQL Analysis (SAST)
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java,javascript
          # Override default queries with security-and-quality query pack
          queries: security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  secret-detection:
    name: Secret Detection
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch full history for better secret detection
          fetch-depth: 0

      - name: Run Trivy secret scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-secrets.sarif"
          scanners: "secret"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-secrets.sarif"

  docker-security:
    name: Docker Image Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if images exist
        id: check-images
        run: |
          # Try to pull images, but don't fail if they don't exist
          if docker pull ghcr.io/${{ github.repository }}-backend:${{ github.sha }} 2>/dev/null; then
            echo "backend-exists=true" >> $GITHUB_OUTPUT
            echo "Backend image found"
          else
            echo "backend-exists=false" >> $GITHUB_OUTPUT
            echo "Backend image not found - skipping backend scan"
          fi
          
          if docker pull ghcr.io/${{ github.repository }}-frontend:${{ github.sha }} 2>/dev/null; then
            echo "frontend-exists=true" >> $GITHUB_OUTPUT
            echo "Frontend image found"
          else
            echo "frontend-exists=false" >> $GITHUB_OUTPUT
            echo "Frontend image not found - skipping frontend scan"
          fi

      - name: Run Trivy vulnerability scanner on backend
        if: steps.check-images.outputs.backend-exists == 'true'
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "ghcr.io/${{ github.repository }}-backend:${{ github.sha }}"
          format: "sarif"
          output: "trivy-backend.sarif"

      - name: Run Trivy vulnerability scanner on frontend
        if: steps.check-images.outputs.frontend-exists == 'true'
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "ghcr.io/${{ github.repository }}-frontend:${{ github.sha }}"
          format: "sarif"
          output: "trivy-frontend.sarif"

      - name: Upload backend scan results
        if: steps.check-images.outputs.backend-exists == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-backend.sarif"
          category: "docker-backend"

      - name: Upload frontend scan results
        if: steps.check-images.outputs.frontend-exists == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-frontend.sarif"
          category: "docker-frontend"

      - name: Skip message
        if: steps.check-images.outputs.backend-exists == 'false' && steps.check-images.outputs.frontend-exists == 'false'
        run: |
          echo "No Docker images found for scanning. This is normal for:"
          echo "- Pull requests where CI hasn't built images yet"
          echo "- Branches where images haven't been pushed to registry"
          echo "Docker security scanning will be skipped."
