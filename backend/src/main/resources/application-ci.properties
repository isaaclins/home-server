# Integration Test Configuration for CI Pipeline
# Uses MySQL service provided by GitHub Actions CI

# Server Configuration
server.port=8080

# Actuator Configuration - expose health endpoint for testing
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# MySQL Database Configuration (using CI service)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/homeserver}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:homeserver_app}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:changeme}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER_CLASS_NAME:com.mysql.cj.jdbc.Driver}

# Database connection pool settings for CI
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# JPA Configuration for testing
spring.jpa.database-platform=${SPRING_JPA_DATABASE_PLATFORM:org.hibernate.dialect.MySQL8Dialect}
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:create-drop}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:true}

# Security Configuration (test values)
jwt.secret=${JWT_SECRET:test_jwt_secret_for_ci_pipeline_only_must_be_at_least_256_bits_long}
jwt.expiration=${JWT_EXPIRATION:86400000}

# Logging Configuration
logging.level.root=${LOGGING_LEVEL_ROOT:INFO}
logging.level.org.springframework.web=${LOGGING_LEVEL_WEB:DEBUG}
logging.level.com.isaaclins.homeserver=${LOGGING_LEVEL_APP:DEBUG}

# Integration test specific settings
spring.jpa.defer-datasource-initialization=false
spring.sql.init.mode=never

# Fail fast if critical environment variables are missing
spring.datasource.initialization-mode=never 
