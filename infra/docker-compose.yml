version: "3.9"

services:
  mysql:
    image: mysql:8.1
    container_name: mysql
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 10
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: home_server
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    # GPU note: On systems with NVIDIA GPUs you can enable acceleration by either
    # 1) uncommenting the `runtime: nvidia` line below **and**
    #    running Docker with the NVIDIA Container Toolkit installed, **or**
    # 2) using an override file (e.g. docker-compose.gpu.yml) to add
    #    `deploy.resources.reservations.devices`.
    # Leaving these settings out ensures the stack also runs on machines
    # without GPUs (e.g., macOS dev boxes).
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama

  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--api.dashboard=true"
      - "--log.level=INFO"
    ports:
      - "80:80"
      - "8088:8080" # dashboard accessible on http://localhost:8088
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  gateway:
    build: ../backend/gateway-service
    container_name: gateway-service
    restart: unless-stopped
    depends_on:
      - mysql
      - ollama
    environment:
      SPRING_PROFILES_ACTIVE: docker
      MYSQL_URL: jdbc:mysql://mysql:3306/home_server
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    ports:
      - "8080:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.server.local`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=8080"

  auth-service:
    build: ../backend/auth-service
    container_name: auth-service
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      MYSQL_URL: jdbc:mysql://mysql:3306/home_server
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    ports:
      - "8081:8081"

  chat-service:
    build: ../backend/chat-service
    container_name: chat-service
    restart: unless-stopped
    depends_on:
      - ollama
    environment:
      SPRING_PROFILES_ACTIVE: docker
      MYSQL_URL: jdbc:mysql://mysql:3306/home_server
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    ports:
      - "8082:8082"

  frontend:
    build:
      context: ../frontend
      args:
        NEXT_PUBLIC_API_BASE_URL: http://api.server.local
    container_name: frontend
    restart: unless-stopped
    depends_on:
      - gateway
    ports:
      - "3000:3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`app.server.local`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

volumes:
  mysql-data:
  ollama-data:
